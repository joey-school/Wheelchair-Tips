@model WheelchairTips.Models.ViewModels.TipsCategoriesViewModel

@{
    ViewData["Title"] = "Home Page";
}

<div class="row">
    <div class="col s7">
        <h1>Welcome to wheelchair tips!</h1>

        <p>Praesent eu egestas nulla. Curabitur in leo at sapien sagittis sollicitudin. Donec vel enim nec erat ornare auctor. Pellentesque porta dolor in risus dignissim pellentesque. Fusce non pretium magna. Nulla arcu lectus, rhoncus condimentum enim non, faucibus posuere leo.</p>

        <p>Proin in dapibus dolor. Morbi venenatis nunc nec iaculis vestibulum. Nunc in augue tincidunt, suscipit lacus sagittis, maximus ipsum. Pellentesque pulvinar molestie nisi, bibendum dapibus ipsum hendrerit eu.</p>
    
        <p>Salite altius!</p>
    </div>
</div>
    <form asp-controller="Home" asp-action="Index" method="post">
        <select asp-for="CategoryId" asp-items='Model.Categories'></select>
       
        <br /><button type="submit">Filter</button>
    </form>

    



    <div class="row">
        @foreach (var item in Model.Tips)
        {
            <div class="col s6 m6">
                <div class="card">
                    <div class="card-image">
                        <img src="http://materializecss.com/images/sample-1.jpg">
                        <span class="card-title">@Html.DisplayFor(modelItem => item.Title)</span>
                    </div>
                    <div class="card-content">
                        <p>
                            I am a very simple card. I am good at containing small bits of information.
                            I am convenient because I require little markup to use effectively.
                        </p>
                    </div>
                    <div class="card-action">
                        <a asp-controller="Tips" asp-action="Details" asp-route-id="@item.Id" class="blue-grey-text text-darken-4">Details</a>
                    </div>
                </div>
            </div>
        }
    </div>




</div>